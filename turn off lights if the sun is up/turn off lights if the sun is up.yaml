blueprint:
  name: Turn off lights if the sun is up
  description: Used for outdoor lighting, so that the light will not be on when the sun is up
  domain: automation
  input:        
    light_entity_1:
      name: Light Entity 1
      description: light entity to be turned off if turned on when the sun is up
      selector:
        entity:
    light_entity_2:
      name: Light Entity 2
      description: light entity to be turned off if turned on when the sun is up
      selector:
        entity:
    duration:
      name: Seconds before turning off the lights
      description: Time in seconds to wait before turning off the lights
      default: 5
      selector:
        number:
          min: 0
          max: 60
          unit_of_measurement: seconds
    before_offset:
      name: Before Offset
      description: Offset for the before sunset time
      selector:
        number:
          min: -180
          max: 180
          unit_of_measurement: minutes
    after_offset:
      name: After Offset
      description: Offset for the after sunrise time
      selector:
        number:
          min: -180
          max: 180
          unit_of_measurement: minutes
    media_player:
      name: Media Player
      description: Choose the media player which will announce the message
      selector:
        entity:
          domain: media_player
    max_parallel:
      name: Max parallel automation runs
      selector:
        number:
          min: 1
          max: 50

mode: parallel
max: !input max_parallel

variables:
  light_entity_1: !input light_entity_1
  light_entity_2: !input light_entity_2
  duration: !input duration
  after_offset: !input after_offset
  before_offset: !input before_offset
  media_player: !input media_player
  max_parllel: !input max_parallel

trigger:
  - platform: state
    entity_id:
      - !input light_entity_1
      - !input light_entity_2
    for: !input duration
    to: 'on'

condition:
  - condition: sun
    before: sunset
    before_offset: !input before_offset
    after: sunrise
    after_offset: !input after_offset
  
action:
  - data:
      entity_id: '{{ trigger.entity_id }}'
    service: homeassistant.turn_off
  - data:
      entity_id: !input media_player
      message: >-
        Turning off "{{ state_attr(trigger.entity_id, 'friendly_name') }}
        because the sun is still up
    service: tts.google_translate_say
